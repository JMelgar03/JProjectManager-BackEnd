{"version":3,"sources":["firebase/firebase-config.js","types/types.js","actions/uiLoading.js","helpers/fetch.js","actions/project.js","helpers/fileUploadImage.js","actions/auth.js","hooks/useForm.js","components/ui/ModalPassword.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","components/project-manager/LandinPageScreen.js","routers/AuthRouter.js","routers/PrivateRoute.js","routers/PublicRoute.js","components/project-manager/ProfileScreen.js","helpers/progress.js","components/ui/Modal.js","components/project-manager/TaskCard.js","components/project-manager/ProjectManagerScreen.js","components/project-manager/Projects.js","components/project-manager/ProjectsScreen.js","components/ui/NavBar.js","routers/ProjectRouter.js","routers/AppRouter.js","reducers/projectReducer.js","store/store.js","reducers/authReducer.js","reducers/uiReducer.js","ProjectApp.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","googleAuthProvider","auth","GoogleAuthProvider","types","startUiLoading","type","finishUiLoading","baseUrl","process","fetchWithoutUid","endPoint","data","method","url","fetch","headers","body","JSON","stringify","setActiveProject","project","payload","projectAddNew","startLoadProjects","idUser","dispatch","a","resp","json","ok","loadProjects","projects","Swal","fire","projectEdited","projectDeleted","idProject","cardTaskCreated","task","progress","cardTaskEdited","cardTaskDeleted","idTask","startChangeStatusCard","_id","changeStatusCard","fileUploadImage","file","formData","FormData","append","cloudResp","secure_url","sendVerificationEmail","currentUser","sendEmailVerification","message","login","uid","displayName","emailVerified","email","photoURL","logOut","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","ModalPassword","useDispatch","formValues","valid","msg","validation","setValidation","className","id","tabIndex","aria-labelledby","aria-hidden","placeholder","onChange","role","data-bs-dismiss","onClick","validator","isEmail","sendPasswordResetEmail","then","catch","e","startResetPassword","LoginScreen","loading","useSelector","state","ui","setvalidation","show","setShow","password","isFormValid","isEmpty","handleShoeHidePass","src","alt","autoComplete","style","marginBottom","cursor","data-bs-toggle","data-bs-target","preventDefault","signInWithEmailAndPassword","user","loginEmailAndPassword","disabled","signInWithPopup","to","RegisterScreen","lastname","password2","trim","length","console","log","onSubmit","createUserWithEmailAndPassword","updateProfile","createUserEmailAndPassword","LandinPageScreen","aria-controls","aria-expanded","aria-label","href","data-bs-spy","data-bs-offset","data-bs-ride","data-bs-slide","width","height","AuthRouter","path","component","PrivateRoute","isLogged","Component","rest","props","PublicRoute","ProfileScreen","name2","email2","password1","editableName","setEditableName","editableEmail","setEditableEmail","useEffect","localStorage","setItem","handleName","handleEmail","document","querySelector","click","files","urlPhoto","startUploadImage","display","startUpdateName","updateEmail","startUpdateEmail","updatePassword","i","progressNow","map","t","status","Math","floor","Modal","activeProject","projectName","description","startDate","endDate","active","setState","handleImage","urlImage","momentStart","moment","momentFinish","isSameOrAfter","backgroundImage","backgroundPosition","maxLength","imgBackground","getElementById","startProjectEdit","TaskCard","editable","setEditable","taskTitle","handleEditTask","newProject","newTask","filter","startCardTaskEdit","startCardTaskDelete","ProjectManagerScreen","setValid","isTaskValid","res","aria-valuenow","aria-valuemin","aria-valuemax","taskSaved","startCardTaskCreate","task2","position","Projects","ProjectsScreen","userEmailVerified","justifyContent","NavBar","search","handleSearch","searchLW","toLocaleLowerCase","projectFiltered","p","includes","busqueda","getItem","aria-current","signOut","ProjectRouter","AppRouter","check","setCheck","isLoggedIn","setisLoggedIn","onAuthStateChanged","parse","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","ta","store","createStore","applyMiddleware","thunk","ProjectApp","ReactDOM","render"],"mappings":"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","file":"static/js/main.89657ffa.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBFL-6cOc7j3yRg7oFVY2Eos1Kyf4FbAEU\",\r\n    authDomain: \"j-project--manager.firebaseapp.com\",\r\n    projectId: \"j-project--manager\",\r\n    storageBucket: \"j-project--manager.appspot.com\",\r\n    messagingSenderId: \"9824451223\",\r\n    appId: \"1:9824451223:web:df3024a8b7a00dba5d07d2\"\r\n  };\r\n  \r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n  const db = firebase.firestore();\r\n  const googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\n  export{\r\n      db,\r\n      firebase,\r\n      googleAuthProvider\r\n  }","export const types = {\r\n    login: '[Auth] Login',\r\n    logout: '[Auth] Logout',\r\n\r\n    uiLoading: '[Ui] Loading',\r\n    uiFinishLoading: '[Ui] Finish Loading',\r\n\r\n    projectStartCreate:'[Project] start Create Project',\r\n    projectCreate: '[Project] Create',\r\n    projectSetActive: '[Project] Set Active',\r\n    projectSetDesactivate: '[Project] set Desactivate',\r\n    projectDelete: '[Project] Delete',\r\n    projectUpdate: '[Project] Update',\r\n    projectLoaded:'[Project] Load Project',\r\n    projectLogOut:'[Project] LogOut',\r\n\r\n    projectCreateTask: '[Project] Create Task',\r\n    projectChangeCard: '[Project] Change Card',\r\n    projectEditTask: '[Project] Edit Task',\r\n    projectDeleteTask: '[Project] Delete Task'\r\n\r\n}","import { types } from \"../types/types\";\r\n\r\n\r\nexport const startUiLoading = ()=>({\r\n    type: types.uiLoading\r\n});\r\n\r\nexport const finishUiLoading = ()=>({\r\n    type: types.uiFinishLoading\r\n})","\r\nconst baseUrl = process.env.REACT_APP_API_URL;\r\n\r\nconst fetchWithoutUid = (endPoint, data, method='GET')=>{\r\n    const url = `${baseUrl}/${endPoint}`;\r\n   \r\n    if(method === 'GET'){\r\n        return fetch(url);\r\n    }else{\r\n    return fetch(url,{\r\n        method,\r\n        headers:{\r\n            'Content-type': 'application/json'\r\n        },\r\n        body: JSON.stringify(data)\r\n        });\r\n    }\r\n}\r\n\r\nexport {\r\n    fetchWithoutUid\r\n}","import Swal from \"sweetalert2\";\r\nimport { fetchWithoutUid } from \"../helpers/fetch\";\r\nimport { types } from \"../types/types\";\r\nimport { finishUiLoading, startUiLoading } from \"./uiLoading\";\r\n\r\nexport const setActiveProject = (project)=>({\r\n        type: types.projectSetActive,\r\n        payload: project\r\n    \r\n});\r\n\r\nexport const setDesactivateProject= () =>({\r\n        type: types.projectSetDesactivate\r\n});\r\n\r\n\r\n\r\nexport const startProjectAddnew=(project)=>{\r\n        return async(dispatch)=>{\r\n         try {\r\n                dispatch(startUiLoading());\r\n                const resp = await fetchWithoutUid('project/new',project,'POST');\r\n                const body = await resp.json();\r\n                if(body.ok){\r\n                  project.id = body.project.id\r\n                  dispatch(projectAddNew(project));\r\n                  dispatch(finishUiLoading());\r\n                }else{\r\n                        dispatch(finishUiLoading());\r\n                        Swal.fire('Error','Contact to administrator: melgarjonathan03@gmail.com','error');\r\n                }\r\n\r\n         } catch (error) {\r\n                dispatch(finishUiLoading());\r\n                Swal.fire('Error', error, 'error');\r\n         }\r\n\r\n        }\r\n}\r\n\r\nconst projectAddNew = (project)=>({\r\n        type: types.projectCreate,\r\n        payload: project\r\n});\r\n\r\n\r\n\r\nexport const startLoadProjects = (idUser)=>{\r\n      return async(dispatch)=>{\r\n        try {\r\n          dispatch(startUiLoading());\r\n          const resp = await fetchWithoutUid(`project/${idUser}`,idUser,'GET');\r\n          const body = await resp.json();\r\n          if(body.ok){\r\n                dispatch(finishUiLoading());\r\n                dispatch(loadProjects(body.projects));\r\n          }else{\r\n                dispatch(finishUiLoading());\r\n                Swal.fire('Error','Contact to administrator: melgarjonathan03@gmail.com','error');\r\n          }\r\n\r\n        } catch (error) {\r\n                dispatch(finishUiLoading());\r\n                Swal.fire('Error', error, 'error');\r\n        }\r\n\r\n      \r\n      }\r\n};\r\n\r\nexport const loadProjects = (projects)=>({\r\n        type: types.projectLoaded,\r\n        payload: projects\r\n});\r\n\r\nexport const startProjectEdit = (project)=>{\r\n        return async(dispatch)=>{\r\n                try {\r\n                        dispatch(startUiLoading());\r\n                        const resp = await fetchWithoutUid(`project/${project.id}`,project,'PUT');\r\n                        const body = await resp.json();\r\n                        if(body.ok){\r\n                                dispatch(finishUiLoading());\r\n                                dispatch(projectEdited(project));\r\n                                Swal.fire('Complete','Project Edited','success');\r\n                        }else{\r\n                                dispatch(finishUiLoading());\r\n                                Swal.fire('Error','Contact to administrator: melgarjonathan03@gmail.com','error');\r\n                        }\r\n                } catch (error) {\r\n                        dispatch(finishUiLoading());\r\n                        Swal.fire('Error', error, 'error');\r\n                }\r\n                \r\n        }\r\n}\r\n\r\n\r\n\r\n const projectEdited = (project)=>({\r\n        type: types.projectUpdate,\r\n        payload: project\r\n});\r\n\r\nexport const startProjectDelete = (idProject, idUser)=>{\r\n        return async(dispatch)=>{\r\n                try {\r\n                dispatch(startUiLoading());\r\n                const res = await fetchWithoutUid(`project/${idProject}`,idUser,'DELETE');\r\n                const body = await res.json();\r\n                if(body.ok){\r\n                        dispatch(finishUiLoading());\r\n                        dispatch(projectDeleted(idProject));\r\n                }else{\r\n                        dispatch(finishUiLoading());\r\n                        Swal.fire('Error','Contact to administrator: melgarjonathan03@gmail.com','error');\r\n                }\r\n\r\n        }\r\n         catch (error) {\r\n                dispatch(finishUiLoading());\r\n                Swal.fire('Error',error,'error');\r\n                }\r\n        \r\n        }\r\n}\r\n\r\nconst projectDeleted = (idProject)=>({\r\n        type: types.projectDelete,\r\n        payload: idProject\r\n});\r\n\r\nexport const startCardTaskCreate= (idProject, task, progress)=>{\r\n        return async(dispatch)=>{\r\n                try {\r\n                   dispatch(startUiLoading());\r\n                   const resp = await fetchWithoutUid(`task/new/${idProject}`,task,'POST');\r\n                   const body = await resp.json();\r\n                   \r\n                   if(body.ok){\r\n                        dispatch(finishUiLoading());\r\n                        dispatch(cardTaskCreated(idProject,body.taskSaved,progress));\r\n                   }else{\r\n                        dispatch(finishUiLoading());\r\n                        Swal.fire('Error','Contact to administrator: melgarjonathan03@gmail.com','error');\r\n                   }\r\n                \r\n\r\n                } catch (error) {\r\n                        dispatch(finishUiLoading());\r\n                        Swal.fire('Error',error,'error');\r\n                }\r\n        }\r\n\r\n}\r\n\r\n\r\n const cardTaskCreated = (idProject, task, progress)=>({\r\n        type: types.projectCreateTask,\r\n        payload: {idProject: idProject,\r\n                task: task,\r\n                progress: progress\r\n        }\r\n});\r\n\r\nexport const startCardTaskEdit = (idProject,task)=>{\r\n        return async(dispatch)=>{\r\n                try {\r\n                        dispatch(startUiLoading());\r\n                        const resp = await fetchWithoutUid(`task/${task._id}`,task,'PUT');\r\n                        const body = await resp.json();\r\n                        if(body.ok){\r\n                           dispatch(finishUiLoading());\r\n                           dispatch(cardTaskEdited(idProject, task))\r\n                        }else{\r\n                                dispatch(finishUiLoading());\r\n                                Swal.fire('Error','Contact to administrator: melgarjonathan03@gmail.com','error');\r\n                        }\r\n                        \r\n                } catch (error) {\r\n                        dispatch(finishUiLoading());\r\n                        Swal.fire('Error',error,'error');\r\n                }\r\n              \r\n        }\r\n} \r\n\r\n const cardTaskEdited = (idProject,task)=>({\r\n        type: types.projectEditTask,\r\n        payload: {\r\n         idProject: idProject,\r\n         task: task\r\n        }\r\n});\r\n\r\n\r\nexport const startCardTaskDelete = (idTask, progress, task)=>{\r\n        return async(dispatch)=>{\r\n                try {\r\n                        dispatch(startUiLoading());\r\n                        const resp = await fetchWithoutUid(`task/${idTask}`,task,'DELETE');\r\n                        const body = await resp.json();\r\n                        if(body.ok){\r\n                           dispatch(finishUiLoading());\r\n                           dispatch(cardTaskDeleted(idTask, progress));\r\n                        }else{\r\n                                dispatch(finishUiLoading());\r\n                                Swal.fire('Error','Contact to administrator: melgarjonathan03@gmail.com','error');\r\n                        }\r\n                        \r\n                } catch (error) {\r\n                        dispatch(finishUiLoading());\r\n                        Swal.fire('Error',error,'error');\r\n                }\r\n        }\r\n}\r\n\r\n const cardTaskDeleted = (idTask, progress)=>({\r\n        type: types.projectDeleteTask,\r\n        payload: {\r\n                idTask: idTask,\r\n                progress: progress\r\n        }\r\n});\r\n\r\nexport const startChangeStatusCard = (project,progress, task)=>{\r\n        return async(dispatch)=>{\r\n                try {\r\n                        dispatch(startUiLoading());\r\n                        const resp = await fetchWithoutUid(`task/${task._id}`,task,'PUT');\r\n                        const body = await resp.json();\r\n                        if(body.ok){\r\n                           dispatch(finishUiLoading());\r\n                           dispatch(changeStatusCard(project,progress));\r\n                        }else{\r\n                                dispatch(finishUiLoading());\r\n                                Swal.fire('Error','Contact to administrator: melgarjonathan03@gmail.com','error');\r\n                        }\r\n                        \r\n                } catch (error) {\r\n                        dispatch(finishUiLoading());\r\n                        Swal.fire('Error',error,'error');\r\n                }\r\n\r\n        }\r\n}\r\n\r\nconst changeStatusCard = (project,progress)=>({\r\n        type: types.projectChangeCard,\r\n        payload:{\r\n                project:project,\r\n                progress:progress\r\n        }\r\n})\r\n\r\nexport const projectLogOut=()=>({\r\n        type: types.projectLogOut\r\n})","export const fileUploadImage = async (file)=>{\r\n    const cloudUrl = 'https://api.cloudinary.com/v1_1/dp8tcoczh/image/upload';\r\n\r\n    const formData = new FormData();\r\n    formData.append('upload_preset', 'J-PROJECT-MANAGER');\r\n    formData.append('file', file);\r\n\r\n    try {\r\n\r\n        const resp = await fetch(cloudUrl,{\r\n            method: 'POST',\r\n            body: formData\r\n        });\r\n\r\n        if(resp.ok){\r\n            const cloudResp = await resp.json();\r\n            return cloudResp.secure_url;\r\n        }else {\r\n            throw await resp.json();\r\n        }\r\n        \r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n\r\n}","import {firebase, googleAuthProvider} from '../firebase/firebase-config';\r\nimport Swal from 'sweetalert2';\r\nimport { types } from \"../types/types\";\r\nimport { finishUiLoading, startUiLoading } from './uiLoading';\r\nimport { projectLogOut } from './project';\r\nimport { fileUploadImage } from '../helpers/fileUploadImage';\r\n\r\n\r\nexport const startGoogleLogin = ()=>{\r\n  return(dispatch)=>{\r\n    firebase.auth().signInWithPopup(googleAuthProvider)\r\n    .then(({user}) => {\r\n      dispatch(login(user.uid, user.displayName, user.email,user.photoURL))\r\n    })\r\n    .catch(e => {\r\n      \r\n      Swal.fire('Error', e.message, 'error');\r\n     \r\n  })\r\n  }\r\n}\r\n\r\nexport const loginEmailAndPassword = (email, password) =>{\r\n  return(dispatch)=>{\r\n      dispatch(startUiLoading());\r\n     firebase.auth().signInWithEmailAndPassword(email, password)\r\n     .then( ({ user }) =>{\r\n     \r\n      dispatch( login(user.uid, user.displayName, user.emailVerified, user.email,user.photoURL) );\r\n      dispatch(finishUiLoading());\r\n     })\r\n     .catch(e=>{\r\n      dispatch(finishUiLoading());\r\n       Swal.fire('Error', e.message, 'error');\r\n     })\r\n\r\n  }\r\n\r\n}\r\n\r\nexport const createUserEmailAndPassword = (name, lastname, email, password )=>{\r\n    return(dispatch)=>{\r\n      dispatch(startUiLoading());\r\n      firebase.auth().createUserWithEmailAndPassword(email, password)\r\n      .then(async({user})=>{\r\n          await user.updateProfile({displayName: `${name} ${lastname}`});\r\n          dispatch(sendVerificationEmail());\r\n          dispatch( login(user.uid, user.displayName, user.emailVerified, user.email,user.photoURL) );\r\n          dispatch(finishUiLoading());\r\n      })\r\n      .catch(e=>{\r\n        dispatch(finishUiLoading());\r\n        Swal.fire('Error', e.message, 'error');\r\n       \r\n      })\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const startUploadImage = (file)=>{\r\n  return async(dispatch)=>{\r\n    dispatch(startUiLoading());\r\n    const urlPhoto = await fileUploadImage(file);\r\n\r\n    const user = await firebase.auth().currentUser;\r\n    user.updateProfile({\r\n     photoURL: urlPhoto\r\n    }).then(function(){ \r\n      dispatch(finishUiLoading());\r\n      dispatch(login(user.uid,user.displayName, user.emailVerified, user.email, user.photoURL))\r\n    }).catch(e=>{\r\n      dispatch(finishUiLoading());\r\n      Swal.fire('Error', e.message, 'error');\r\n    })\r\n  }\r\n    \r\n}\r\n\r\n\r\n\r\nexport const startUpdateName = (name)=>{\r\n  return async(dispatch)=>{\r\n    dispatch(startUiLoading());\r\n    const user = await firebase.auth().currentUser;\r\n    user.updateProfile({\r\n      displayName: name\r\n    }).then(function(){ \r\n      dispatch(finishUiLoading());\r\n      dispatch(login(user.uid,user.displayName, user.emailVerified, user.email,user.photoURL))\r\n    }).catch(e=>{\r\n      dispatch(finishUiLoading());\r\n      Swal.fire('Error', e.message, 'error');\r\n    })\r\n  }\r\n}\r\n\r\nexport const startUpdateEmail = (email)=>{\r\n  return async(dispatch)=>{\r\n    dispatch(startUiLoading());\r\n    const user = await firebase.auth().currentUser;\r\n    user.updateEmail(email)\r\n    .then(function(){ \r\n      dispatch(sendVerificationEmail());\r\n      dispatch(login(user.uid,user.displayName, user.emailVerified, user.email,user.photoURL));\r\n      dispatch(finishUiLoading());\r\n    }).catch(e=>{\r\n      dispatch(finishUiLoading());\r\n      Swal.fire('Error', e.message, 'error');\r\n    })\r\n  }\r\n}\r\n\r\nexport const startUpdatePassword = (password)=>{\r\n  return (dispatch)=>{\r\n    const user = firebase.auth().currentUser;\r\n    dispatch(startUiLoading());\r\n    user.updatePassword(password)\r\n    .then(function(){\r\n      dispatch(finishUiLoading())\r\n      Swal.fire('Complete','Password Updated','success')\r\n    }\r\n    )\r\n    .catch(e=>{\r\n      dispatch(finishUiLoading())\r\n      Swal.fire('Error', e.message, 'error');\r\n    })\r\n  }\r\n  \r\n}\r\n\r\nexport const startResetPassword = (email)=>{\r\n  return async(dispatch)=>{\r\n\r\n    const auth = firebase.auth();\r\n\r\n    auth.sendPasswordResetEmail(email)\r\n    .then(function(){\r\n      Swal.fire('Password Reset','Check your email.','success')\r\n    })\r\n    .catch(e=>{\r\n      Swal.fire('Error',e.message,'error')\r\n    })\r\n\r\n  }\r\n}\r\n\r\n\r\nexport const sendVerificationEmail = ()=>{\r\n  return async(dispatch)=>{\r\n    try {\r\n      dispatch(startUiLoading());\r\n    await firebase.auth().currentUser.sendEmailVerification();\r\n\r\n    dispatch(finishUiLoading());\r\n    } catch (error) {\r\n      dispatch(finishUiLoading());\r\n\r\n      Swal.fire('Error', error.message, 'error');\r\n    }\r\n    \r\n  }\r\n}\r\n\r\n\r\nexport const login = (uid, displayName, emailVerified, email,photoURL)=>({\r\n  type: types.login,\r\n  payload: {\r\n      uid,\r\n      displayName,\r\n      emailVerified,\r\n      email,\r\n      photoURL\r\n  }\r\n});\r\n\r\nexport const startlogOut = ()=>{\r\n  return async(dispatch)=>{\r\n    await firebase.auth().signOut()\r\n    .then(\r\n      dispatch(logOut()),\r\n      dispatch(projectLogOut())      \r\n    )\r\n    .catch(e=>{\r\n      Swal.fire('Error', e.message, 'error');\r\n    })\r\n\r\n  }\r\n}\r\n\r\nexport const logOut = ()=>({\r\n  type: types.logout\r\n})","import { useState } from \"react\"\r\n\r\nexport const useForm = (initialState = {}) => {\r\n\r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = ()=>{\r\n        setValues( initialState );\r\n    }\r\n\r\n    const handleInputChange = ({target})=> {\r\n       \r\n        setValues({\r\n            ...values,\r\n            [target.name]: target.value\r\n        });\r\n    }\r\n    \r\n    return [values, handleInputChange, reset];\r\n\r\n}","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport validator from 'validator';\r\nimport { startResetPassword } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\n\r\n\r\n\r\nexport const ModalPassword = () => {\r\n    const dispatch = useDispatch();\r\n    const [formValues,handleInputChange,reset] = useForm({email :''});\r\n    const [validation, setValidation] = useState({valid:true, msg:''});\r\n\r\n    const {email} = formValues; \r\n\r\n    const handleResetPassword = ()=>{\r\n        if(!validator.isEmail(email)){\r\n          \r\n            setValidation({\r\n                valid:false,\r\n                msg:'Invalid email'\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        dispatch(startResetPassword(email));\r\n        setValidation({\r\n            valid:true,\r\n            msg:''\r\n        });\r\n    }\r\n\r\n    const handleReset = ()=>{\r\n        setValidation({\r\n            valid:true,\r\n            msg:''\r\n        });\r\n\r\n        reset();\r\n    }\r\n\r\n    return (\r\n        <div className=\"modal fade\" id=\"exampleModal\" tabIndex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n        <div className=\"modal-dialog\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h5 className=\"modal-title\" id=\"exampleModalLabel\">Restore Password</h5>\r\n             \r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <input type=\"text\" className=\"profile__input\" placeholder=\"Enter your account email.\" onChange={handleInputChange}  name=\"email\" value={email}/>\r\n\r\n              {!(validation.valid) &&(\r\n                <div className=\"alert alert-danger\" role=\"alert\">\r\n                {validation.msg}\r\n                </div>)\r\n            }\r\n\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n              <button type=\"button\" className=\"btn btn-secondary\" data-bs-dismiss=\"modal\" onClick={handleReset}>Close</button>\r\n              <button type=\"button\" className=\"btn btn-info\" onClick={handleResetPassword}>Save changes</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport validator from 'validator';\r\nimport { Link } from 'react-router-dom';\r\nimport { loginEmailAndPassword } from '../../actions/auth';\r\nimport { startGoogleLogin } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { ModalPassword } from '../ui/ModalPassword';\r\n\r\n\r\nexport const LoginScreen = () => {\r\n    const {loading} = useSelector(state => state.ui);\r\n    const [validation, setvalidation] = useState({valid:true,msg:''});\r\n    const [show, setShow] = useState(false);\r\n    \r\n    const dispatch = useDispatch();\r\n    const [formValues, handleInputChange] = useForm({\r\n        email: '',\r\n        password: ''\r\n    })\r\n\r\n    const {email, password} = formValues; \r\n\r\n    const handleLogin = (e)=>{\r\n        e.preventDefault();\r\n        if(isFormValid()){\r\n            dispatch(loginEmailAndPassword(email, password));\r\n        }\r\n        \r\n    }\r\n\r\n    const isFormValid = ()=>{\r\n        if( !validator.isEmail(email) ){\r\n            setvalidation({valid:false, msg:'Invalid email'});\r\n            return false;\r\n\r\n        }else if(validator.isEmpty(password)){\r\n            setvalidation({\r\n                valid:false,\r\n                msg:'Please enter password'\r\n            });\r\n\r\n            return false;\r\n        }\r\n\r\n        setvalidation({\r\n            valid:true,\r\n            msg:''\r\n        });\r\n        return true;\r\n    }\r\n\r\n\r\n\r\n    const googleLogin = ()=>{\r\n        dispatch(startGoogleLogin());\r\n    }\r\n\r\n\r\n    const handleShoeHidePass = ()=>{\r\n        if(show){\r\n            setShow(false);\r\n        }else{\r\n            setShow(true);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n\r\n        \r\n\r\n        <div className=\"auth__main\">\r\n            \r\n            <ModalPassword />\r\n\r\n            \r\n            <div className=\"auth__box-container animate__animated animate__fadeIn \">\r\n                <div className=\"projectManager__margin\">\r\n                <img className=\"projectManager__logo \" src=\"../JProjectManager-logo.png\" alt=\"Logo\" />\r\n                </div>\r\n                \r\n            <h2 className=\"auth__title\">Login to continue</h2>\r\n            <form >\r\n                <input\r\n                className=\" auth__input auth__input-text\"\r\n                type=\"text\"\r\n                name=\"email\"\r\n                placeholder=\"Email\"\r\n                autoComplete=\"off\"\r\n                value={email}\r\n                onChange={handleInputChange}\r\n                 />\r\n\r\n                <input\r\n                className=\" auth__input auth__input-text\"\r\n                type={`${(show)?'text':'password'}`}\r\n                name=\"password\"\r\n                placeholder=\"Password\"\r\n                value={password}\r\n                onChange={handleInputChange}\r\n                 />\r\n\r\n                {(!show)\r\n                    ?(<button className=\"far fa-eye fa-xs profile-btn-show-password\" type=\"button\" onClick={handleShoeHidePass}></button>)\r\n                    :(<button className=\"far fa-eye-slash fa-xs profile-btn-show-password\" type=\"button\" onClick={handleShoeHidePass}></button>)\r\n                }\r\n\r\n                     <div  style={{marginBottom:'10px'}}>\r\n                         <a  className=\"link link-hover \"  style={{cursor:'pointer', marginBottom:'10px'}} data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\">\r\n                             Forgot Password?\r\n                        </a>\r\n                    </div>\r\n                 \r\n                 {!(validation.valid) &&(\r\n                    <div className=\"alert alert-danger\" role=\"alert\">\r\n                        {validation.msg}\r\n                    </div>)\r\n                }\r\n\r\n            <button \r\n            className=\" auth__button-sign-in btn btn-info \"\r\n            onClick={handleLogin}\r\n            disabled={loading}\r\n            >\r\n                Login\r\n            </button>\r\n\r\n            <hr/>\r\n                <div className=\"auth__social-networks\">\r\n                    <p><b>Login with social networks</b></p>\r\n                    <div \r\n                    className=\"google-btn auth__btn-google aut__btn-google-active \"\r\n                    onClick={googleLogin}\r\n                    >\r\n                    <div className=\"google-icon-wrapper\">\r\n                        <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                    </div>\r\n                \r\n                    <p className=\"btn-text \">\r\n                    <b >Sign in with google</b>\r\n                  </p>\r\n                \r\n                \r\n                </div>\r\n                </div>\r\n               <Link to=\"/auth/register\" className=\"link link-hover \">\r\n                   Create new account\r\n               </Link>\r\n            </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport validator from 'validator';\r\nimport { Link } from 'react-router-dom';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { createUserEmailAndPassword } from '../../actions/auth';\r\n\r\n\r\nexport const RegisterScreen = () => {\r\n\r\n      const [validation, setvalidation] = useState({valid:true,msg:''});\r\n      const dispatch = useDispatch();\r\n      const {loading} = useSelector(state => state.ui)\r\n      const [show, setShow] = useState(false);\r\n    const [formValues, handleInputChange] = useForm({\r\n        name: '',\r\n        lastname: '',\r\n        email: '',\r\n        password: '',\r\n        password2: ''\r\n    });\r\n\r\n    const {name, lastname, email, password, password2} = formValues; \r\n\r\n    const handleRegister = (e)=>{\r\n        e.preventDefault();\r\n       if(isFormValid()){\r\n            dispatch(createUserEmailAndPassword(name, lastname, email, password));\r\n       }\r\n    }\r\n\r\n\r\n\r\n    const isFormValid = ()=>{\r\n        if(name.trim().length === 0){\r\n            setvalidation({\r\n                valid:false,\r\n                msg:'Name is required'\r\n            });\r\n            return false;\r\n\r\n        }else if(!validator.isEmail(email)){\r\n            console.log('Invalid email');\r\n            setvalidation({\r\n                valid:false,\r\n                msg:'Invalid email'\r\n            });\r\n\r\n            return false;\r\n        }else if(lastname.trim().length === 0){\r\n\r\n            console.log('Last Name is required');\r\n            setvalidation({\r\n                valid:false,\r\n                msg:'Last Name is required'\r\n            });\r\n            return false;\r\n        }\r\n        else if(password.length <= 5 || password !== password2){\r\n            setvalidation({\r\n                valid:false,\r\n                msg:'The password must contain at least 6 characters and match the confirmation'\r\n            });\r\n\r\n            return false;\r\n        }\r\n\r\n        setvalidation({valid:true, msg:''});\r\n    return true\r\n    }\r\n\r\n    const handleShoeHidePass = ()=>{\r\n        if(show){\r\n            setShow(false);\r\n        }else{\r\n            setShow(true);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"auth__main\">\r\n        <div className=\"auth__box-container animate__animated animate__fadeIn\">\r\n            <div className=\"projectManager__margin\">\r\n            <img className=\"projectManager__logo \" src=\"../JProjectManager-logo.png\" alt=\"Logo\" />\r\n            </div>\r\n            \r\n        <h2 className=\"auth__title\">Create Your Account</h2>\r\n        <form onSubmit={handleRegister} >\r\n            <input\r\n            className=\" auth__input auth__input-text\"\r\n            type=\"text\"\r\n            name=\"name\"\r\n            placeholder=\"Name\"\r\n            autoComplete=\"off\"\r\n            onChange={handleInputChange}\r\n            value={name}\r\n             />\r\n\r\n            <input\r\n            className=\" auth__input auth__input-text\"\r\n            type=\"text\"\r\n            name=\"lastname\"\r\n            placeholder=\"Last Name\"\r\n            autoComplete=\"off\"\r\n            onChange={handleInputChange}\r\n            value={lastname}\r\n             />\r\n\r\n            <input\r\n            className=\" auth__input auth__input-text\"\r\n            type=\"text\"\r\n            name=\"email\"\r\n            placeholder=\"Email\"\r\n            autoComplete=\"off\"\r\n            onChange={handleInputChange}\r\n            value={email}\r\n             />\r\n\r\n            <input\r\n            className=\" auth__input auth__input-text\"\r\n            type={`${(show)?'text':'password'}`}\r\n            name=\"password\"\r\n            placeholder=\"Password\"\r\n            onChange={handleInputChange}\r\n            value={password}\r\n             />\r\n\r\n            <input\r\n            className=\" auth__input auth__input-text\"\r\n            type={`${(show)?'text':'password'}`}\r\n            name=\"password2\"\r\n            placeholder=\"Confirm Password\"\r\n            onChange={handleInputChange}\r\n            value={password2}\r\n             />\r\n\r\n            {(!show)\r\n                    ?(<button className=\"far fa-eye fa-xs profile-btn-show-password\" type=\"button\" onClick={handleShoeHidePass}></button>)\r\n                    :(<button className=\"far fa-eye-slash fa-xs profile-btn-show-password\" type=\"button\" onClick={handleShoeHidePass}></button>)\r\n            }\r\n\r\n            {!(validation.valid) &&(\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                {validation.msg}\r\n            </div>)\r\n            }\r\n\r\n            <p className=\"terms-and-condition-text\">By clicking on the register button you accept the <Link className=\"link link-hover\" to=\"/auth/terms\">\r\n                terms and conditions</Link> for the use of this site.</p>\r\n\r\n        <button \r\n          className=\" auth__button-sign-in btn btn-info \"\r\n          disabled={loading}\r\n          >\r\n            Register\r\n        </button>\r\n\r\n        <hr/>\r\n         \r\n           <Link to=\"/auth/login\" className=\"link link-hover \">\r\n               Have account? sign in!\r\n           </Link>\r\n        </form>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const LandinPageScreen = () => {\r\n    return (\r\n        <div className=\"landingPage-bg-color\">\r\n                \r\n                <nav id=\"navbar-example2\" className=\"navbar navbar-expand-lg navbar-dark bg-dark px-3\">\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarTogglerDemo01\" aria-controls=\"navbarTogglerDemo01\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <img className=\"navbar-logo \" src=\"../Logo-white-transparent.PNG\" alt=\"Logo\" />\r\n                 <ul className=\"nav nav-pills collapse navbar-collapse\" id=\"navbarTogglerDemo01\">\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#scrollspyHeading1\">Introduction</a>\r\n                    </li>\r\n                     <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#scrollspyHeading2\">Functions</a>\r\n                    </li>\r\n                    <li className=\"nav-item dropdown\">\r\n                        <a className=\"nav-link dropdown-toggle\" data-bs-toggle=\"dropdown\" href=\"#\" role=\"button\" aria-expanded=\"false\">Login</a>\r\n                     <ul className=\"dropdown-menu\">\r\n                        <li><Link className=\"dropdown-item nav-link\" to=\"/auth/login\">Login</Link></li>\r\n                        <li><Link className=\"dropdown-item nav-link\" to=\"/auth/register\">Register</Link></li>\r\n                        \r\n                     </ul>\r\n                 </li>\r\n               </ul>\r\n              </nav>\r\n\r\n              <div className=\"container landingPage-bg-color pt-2\">\r\n\r\n                 \r\n                \r\n                <div data-bs-spy=\"scroll\" data-bs-target=\"#navbar-example2\" data-bs-offset=\"0\" className=\"scrollspy-example landingPage-bg-color row landingPage-aligItems\" tabIndex=\"0\">\r\n                    <div id=\"scrollspyHeading1 \" className=\"landingPage-aligItems col-12\">\r\n                        <div className=\"row landingPage-aligItems\">\r\n                       \r\n                        <div className=\"col-12 la landingPage-aligItems\">\r\n                            <img src=\"../Logo-white-transparent.PNG\" className=\"img-fluid landing-img-size-logo\" alt=\"logo\">\r\n                            </img>\r\n                            </div>\r\n                        \r\n                            <div id=\"carouselExampleControls\" className=\"carousel slide col-12 animate__animated animate__zoomIn\" data-bs-ride=\"carousel\">\r\n                                <div className=\"carousel-inner\">\r\n                                    <div className=\"carousel-item active\">\r\n                                        <img src=\"../img/landing/introduction.png\" className=\"d-block w-100\" alt=\"...\"/>\r\n                                    </div>\r\n                                    <div className=\"carousel-item\">\r\n                                        <img src=\"../img/landing/introduction2.png\" className=\"d-block w-100\" alt=\"...\"/>\r\n                                    </div>\r\n                                    <div className=\"carousel-item\">\r\n                                        <img src=\"../img/landing/introduction3.png\" className=\"d-block w-100\" alt=\"...\"/>\r\n                                    </div>\r\n                                </div>\r\n                               <button className=\"carousel-control-prev\" type=\"button\" data-bs-target=\"#carouselExampleControls\" data-bs-slide=\"prev\">\r\n                                    <span className=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\r\n                                    <span className=\"visually-hidden\">Previous</span>\r\n                                </button>\r\n                                <button className=\"carousel-control-next\" type=\"button\" data-bs-target=\"#carouselExampleControls\" data-bs-slide=\"next\">\r\n                                    <span className=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\r\n                                    <span className=\"visually-hidden\">Next</span>\r\n                                </button>\r\n                            </div>\r\n                        \r\n                        \r\n                        <p className=\"landing-text col-12 animate__animated animate__fadeIn\">With J Project Manager you can keep track of the tasks of your projects in an organized way, \r\n                        knowing at all times the percentage of tasks completed and pending.</p>\r\n                        <div className=\"col-12 landingPage-aligItems animate__animated animate__fadeIn\">\r\n                        <Link to=\"/auth/login\" className=\"btn btn-info w-50 \">\r\n                        Try it now!\r\n                        </Link>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                        \r\n                    </div>\r\n                  \r\n\r\n                    <div id=\"scrollspyHeading2\" className=\"landingPage-aligItems row pt-5 pb-5\">\r\n                        <h2 className=\"col-12 pt-5 pb-5 animate__animated animate__fadeIn\" >Other Functions:</h2>\r\n                        \r\n                        <div className=\"card  col-sm-12 col-md-6 col-lg-4 m-1 mt-3 animate__animated animate__zoomIn\" >\r\n                            <img src=\"../img/landing/gooSesion.png\"  style={{width: '300px', height: '170px'}} className=\"card-img-top\" alt=\"...\"/>\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title\">Login with Google</h5>\r\n                                <p className=\"card-text\">You can do a quick login using your google account your credentials are not stored on our servers to make a secure login.</p>\r\n                                <div className=\"landingPage-aligItems\">\r\n                                <Link to=\"/auth/login\" className=\"btn btn-info  \">\r\n                                    Try it now!\r\n                                </Link>\r\n                                 </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"card  col-sm-12 col-md-6 col-lg-4  m-1 mt-3 animate__animated animate__zoomIn\" >\r\n                            <img src=\"../img/landing/progressBar.jpg\" style={{width: '300px', height: '170px'}} className=\"card-img-top\" alt=\"...\"/>\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title\">Percentage Bar</h5>\r\n                                <p className=\"card-text\">A progress bar will accompany you throughout your projects to remind you how much you have completed.</p>\r\n                                <div className=\"landingPage-aligItems\">\r\n                                <Link to=\"/auth/login\" className=\"btn btn-info  \">\r\n                                    Try it now!\r\n                                </Link>\r\n                                 </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    \r\n                </div>\r\n\r\n                \r\n\r\n           \r\n            \r\n        </div>\r\n\r\n    </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route, Switch } from 'react-router'\r\n\r\nimport { LoginScreen } from '../components/auth/LoginScreen'\r\nimport { RegisterScreen } from '../components/auth/RegisterScreen'\r\nimport { LandinPageScreen } from '../components/project-manager/LandinPageScreen'\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n        <div>\r\n            <Switch>\r\n                <Route path=\"/auth/login\" component={LoginScreen} />\r\n                <Route path=\"/auth/register\" component={RegisterScreen} />\r\n                <Route path=\"/auth/landingPage\" component={LandinPageScreen} />\r\n                <Redirect to=\"/auth/landingPage\" />\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router';\r\n\r\nexport const PrivateRoute = ({\r\n    isLogged,\r\n   \r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\nreturn (<Route  \r\n        {...rest}\r\n        component={(props)=>(\r\n            (isLogged)\r\n            ? (<Component {...props} />)\r\n            : (<Redirect to=\"/auth/login\" />)\r\n        )\r\n    }\r\n    \r\n    />\r\n        \r\n    \r\n)\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isLogged: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React from 'react';\r\nimport { Redirect, Route } from 'react-router';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const PublicRoute = ({\r\n    isLogged,\r\n    \r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (<Route  \r\n            {...rest}\r\n            component={(props)=>(\r\n                (isLogged)\r\n                ? (<Redirect to=\"/home\" />)\r\n                : (<Component {...props} />)\r\n            )\r\n        }\r\n        \r\n        />\r\n            \r\n        \r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isLogged: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport validator from 'validator';\r\nimport {startUpdateEmail, startUpdateName, startUpdatePassword, startUploadImage } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\n\r\nexport const ProfileScreen = () => {\r\n    const {name:name2, email:email2, photoURL} = useSelector(state => state.auth);\r\n    const {loading} = useSelector(state => state.ui);\r\n    const [formValues, handleInputChange, reset] = useForm({name:'', email:'',password1:'',password2:''});\r\n    const dispatch = useDispatch();\r\n\r\n    const [editableName, setEditableName] = useState(false);\r\n    const [editableEmail, setEditableEmail] = useState(false);\r\n    const [validation, setValidation] = useState({valid:true, msg:''});\r\n    const [show, setShow] = useState(false);\r\n\r\n    const {name, email, password1, password2} = formValues;\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('busqueda',JSON.stringify(false));\r\n        \r\n    }, []);\r\n\r\n\r\n    const handleProfileImage = ()=>{\r\n    \r\n        document.querySelector('#fileSelector').click();\r\n    }\r\n\r\n    const handleFileChange = (e)=>{\r\n     const file =  e.target.files[0];\r\n     if(file){\r\n         dispatch(startUploadImage(file))\r\n    }\r\n    }\r\n\r\n\r\n   const handleName = ()=>{\r\n    if(editableName){\r\n        setEditableName(false);\r\n    }else{\r\n        setEditableName(true);\r\n    }\r\n    \r\n    }\r\n\r\n    const handleUpdateName = () =>{\r\n        if(name.trim().length === 0){\r\n            setValidation({\r\n                valid:false,\r\n                msg:'Name is required'\r\n            });\r\n           \r\n            return\r\n        }\r\n        setValidation({\r\n            valid: true,\r\n            msg:''\r\n        });\r\n\r\n        dispatch(startUpdateName(name));\r\n        setEditableName(false);\r\n    }\r\n\r\n\r\n    const handleEmail = ()=>{\r\n        if(editableEmail){\r\n            setEditableEmail(false);\r\n        }else{\r\n            setEditableEmail(true);\r\n        }\r\n        \r\n        }\r\n\r\n        const handleUpdateEmail= ()=>{\r\n            if(!validator.isEmail(email)){\r\n              \r\n                setValidation({\r\n                    valid:false,\r\n                    msg:'Invalid email'\r\n                });\r\n    \r\n                return;\r\n            }\r\n            setValidation({\r\n                valid: true,\r\n                msg:''\r\n            });\r\n\r\n            dispatch(startUpdateEmail(email));\r\n            setEditableEmail(false);\r\n        }\r\n\r\n\r\n        const handleUpdatePassword = ()=>{\r\n            if(password1.length <= 5 || password1 !== password2){\r\n                setValidation({\r\n                    valid:false,\r\n                    msg:'The password must contain at least 6 characters and match the confirmation'\r\n                });\r\n    \r\n                return;\r\n            }\r\n            dispatch(startUpdatePassword(password1));\r\n    \r\n            setValidation({valid:true, msg:''});\r\n            reset();\r\n        }\r\n\r\n        const handleShoeHidePass = ()=>{\r\n            if(show){\r\n                setShow(false);\r\n            }else{\r\n                setShow(true);\r\n            }\r\n        }\r\n\r\n    return (\r\n        <div className=\"prfile-bg profile-cont1\">\r\n            <div className=\"profile-cont m-3 container animate__animated animate__fadeIn\">\r\n           \r\n           {(loading) && (<div className=\"spinner-border text-info profile-spiner\" role=\"status\">\r\n                    <span className=\"visually-hidden\"></span>\r\n                </div>)\r\n                \r\n            }\r\n           \r\n             <div  >\r\n            {(photoURL==null)\r\n            \r\n            ?(<img src=\"../img/user.png\" className=\"profile-image mx-auto d-block\" alt=\"...\"></img>)\r\n            :(<img src={photoURL} className=\"profile-image mx-auto d-block\" alt=\"...\"></img>)\r\n            }\r\n            \r\n            <div className=\"profile-cont1\">\r\n            \r\n            <button className=\"btn task-card-btn-width profile-btn-img\" onClick={handleProfileImage}><span className=\"fas fa-plus-circle task-card-icon-color\"></span></button>\r\n            <input type=\"file\" onChange={handleFileChange} id=\"fileSelector\" style={{display: 'none'}}/>\r\n            </div> \r\n            \r\n               \r\n                {!(validation.valid) &&(\r\n                <div className=\"alert alert-danger\" role=\"alert\">\r\n                {validation.msg}\r\n                </div>)\r\n            }\r\n\r\n               \r\n\r\n                <h5 className=\"profile-title\">Name: {(editableName)\r\n                            ?(\r\n                            <>\r\n                            <input \r\n                            className=\"profile__input\"\r\n                            type=\"text\" \r\n                            placeholder=\"Name\" \r\n                            name=\"name\" \r\n                            onChange={handleInputChange}\r\n                            value={name}\r\n                            />\r\n                             <button className=\"btn task-card-btn-width\" onClick={handleName}><span className=\"fas fa-window-close task-card-icon-color\"></span></button>\r\n                            <button className=\"btn task-card-btn-width\" onClick={handleUpdateName}><span className=\"fas fa-save task-card-icon-color\"></span></button>\r\n                            </>\r\n                            ) \r\n                        :(<><label>\r\n                            {name2}\r\n                            <button className=\"btn task-card-btn-width\" onClick={handleName} ><span className=\"fas fa-edit task-card-icon-color\"></span></button>\r\n                        </label>\r\n                         \r\n                         </>\r\n                        )}\r\n                </h5>\r\n\r\n                <h5>Email:  {(editableEmail)\r\n                            ?(<><input \r\n                                className=\"profile__input\"\r\n                            type=\"text\" \r\n                            placeholder=\"Email\" \r\n                            name=\"email\" \r\n                            onChange={handleInputChange}\r\n                            value={email}\r\n                            />\r\n                             <button className=\"btn task-card-btn-width\" onClick={handleEmail}><span className=\"fas fa-window-close task-card-icon-color\"></span></button>\r\n                            <button className=\"btn task-card-btn-width\" onClick={handleUpdateEmail}><span className=\"fas fa-save task-card-icon-color\"></span></button>\r\n                            </>\r\n                            ) \r\n                        :(<><label className=\"\">\r\n                            {email2}\r\n                             <span className=\"\"><button className=\"btn task-card-btn-width\" onClick={handleEmail}  ><span className=\"fas fa-edit task-card-icon-color\"></span></button></span> \r\n                        </label>\r\n                      \r\n                        </>\r\n                        )}\r\n                    \r\n                </h5>\r\n\r\n                <h4>\r\n                        Change Password: \r\n                        <input \r\n                                className=\"profile__input\"\r\n                            type={`${(show)?'text':'password'}`}  \r\n                            placeholder=\"New Password\" \r\n                            name=\"password1\" \r\n                            onChange={handleInputChange}\r\n                            value={password1}\r\n                            />\r\n\r\n                            <input \r\n                                className=\"profile__input\"\r\n                            type={`${(show)?'text':'password'}`} \r\n                            placeholder=\"Confirm Password\" \r\n                            name=\"password2\" \r\n                            onChange={handleInputChange}\r\n                            value={password2}\r\n                            />\r\n\r\n                            {(!show)\r\n                                ?(<button className=\"far fa-eye fa-xs profile-btn-show-password\" onClick={handleShoeHidePass}></button>)\r\n                                :(<button className=\"far fa-eye-slash fa-xs profile-btn-show-password\" onClick={handleShoeHidePass}></button>)\r\n                            }\r\n                            \r\n\r\n                            <button className=\"btn btn-info mb-2\" onClick={handleUpdatePassword}>Change and Save</button>\r\n                </h4>\r\n\r\n             </div>\r\n          </div>\r\n        </div>\r\n    )\r\n}\r\n","export const progress = (project)=>{\r\n    let i = 0;\r\n    let progressNow = 0\r\n            \r\n\r\n            if(project.task.length !== 0){\r\n                project.task.map(t=>{if(t.status === 'Done'){\r\n                    i++;\r\n                }\r\n               });\r\n               \r\n                 progressNow = Math.floor((i/project.task.length)*100) +'%';\r\n            } \r\n            \r\n\r\n            return progressNow;\r\n}","import React, { useState } from 'react';\r\nimport moment from 'moment';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startProjectAddnew, startProjectEdit } from '../../actions/project';\r\n\r\nexport const Modal = () => {\r\n\r\n    const dispatch = useDispatch();  \r\n    \r\n    let initialStateForm = {};\r\n       \r\n    const {activeProject} = useSelector(state => state.project);\r\n       \r\n    const {uid} = useSelector(state => state.auth);\r\n       \r\n        if(activeProject !== null){\r\n            initialStateForm  = activeProject;   \r\n           }else{\r\n            initialStateForm = {\r\n                projectName:'',\r\n                description:'',\r\n                startDate:'',\r\n                endDate:''\r\n            }  \r\n           }\r\n           \r\n    \r\n    \r\n    const [formValues, handleInputChange, reset] = useForm(initialStateForm);\r\n    \r\n   \r\n    const {projectName, description, startDate, endDate} = formValues;\r\n\r\n\r\n    const initialState = {\r\n        active: false,\r\n        url:''   \r\n    }\r\n    const [state, setState] = useState(initialState);\r\n    const [validation, setvalidation] = useState({valid:true,msg:''});\r\n\r\n    const handleImage = (urlImage)=>{\r\n        \r\n        setState({\r\n            active: true,\r\n            url: urlImage\r\n        })\r\n    }\r\n\r\n    const handleModalClose = ()=>{\r\n        setState(initialState);\r\n        reset();\r\n    }\r\n\r\n    const handleAddProject = ()=>{\r\n        if(isFormValid()){\r\n\r\n                if(activeProject === null){\r\n                    dispatch(startProjectAddnew({\r\n                        ...formValues,\r\n                        task:[],\r\n                        imgBackground: state.url,\r\n                        user: uid\r\n                    }));\r\n                    document.getElementById('btnClose').click();\r\n                }else{\r\n                    if(isFormValid()){\r\n                        dispatch(startProjectEdit({\r\n                            ...formValues,\r\n                            id: activeProject.id,\r\n                            imgBackground: state.url,\r\n                            user: activeProject.user,\r\n                            task: activeProject.task,\r\n                            progress:activeProject.progress\r\n                        }));\r\n                        document.getElementById('btnClose').click();\r\n                        \r\n                    }\r\n                }\r\n\r\n           \r\n            \r\n            \r\n        }\r\n    }\r\n    \r\n    const isFormValid=()=>{\r\n       const momentStart = moment(startDate);\r\n       const momentFinish = moment(endDate);\r\n\r\n      \r\n\r\n        if(projectName.trim().length === 0){\r\n            setvalidation({\r\n                valid:false,\r\n                msg:'Project Name is required'\r\n            });\r\n            return false;\r\n\r\n        }else if(momentStart.isSameOrAfter(momentFinish)){\r\n           \r\n            setvalidation({\r\n                valid:false,\r\n                msg:'Finish date must be greater than start Date '\r\n            });\r\n\r\n            return false;\r\n\r\n        }else if(state.url === ''){\r\n            setvalidation({\r\n                valid:false,\r\n                msg:'Please select a image'\r\n            });\r\n            return false;\r\n        }\r\n        setvalidation({valid:true, msg:''});\r\n        return true\r\n    }\r\n\r\n    return (\r\n        <div className=\"modal fade \" id=\"exampleModal\" tabIndex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n            <div className=\"modal-dialog\">\r\n                <div className=\"modal-content modal-border-radius\"\r\n                    style={{\r\n                        backgroundImage: `url('${state.url}')`,\r\n                        backgroundPosition: 'center'\r\n                }}\r\n                \r\n                >\r\n                    <div className=\"modal-header\">\r\n                        <h5 className={`\"modal-title ${state.active && 'modal-title-user'} \"`} id=\"exampleModalLabel\">Create New Project</h5>\r\n                </div>\r\n            <div className=\"modal-body\">\r\n                    {!(validation.valid) &&(\r\n                            <div className=\"alert alert-danger\" role=\"alert\">\r\n                                {validation.msg}\r\n                            </div>)\r\n                        }\r\n                <form>\r\n                    <input \r\n                    className={`\" auth__input auth__input-text ${(state.active)?'modal-input-colors' : 'modal-input-colors-none'} \"`}\r\n                    type=\"text\" \r\n                    placeholder=\"Project Name\"\r\n                    name=\"projectName\"\r\n                    maxLength=\"35\"\r\n                    value={projectName}\r\n                    onChange={handleInputChange}\r\n                    />\r\n                    \r\n                    <textarea \r\n                    className={`\" modal-textarea mt-2 auth__input auth__input-text ${(state.active)?'modal-input-colors' : 'modal-input-colors-none'} \"`}\r\n                    type=\"text\" \r\n                    placeholder=\"Describe your project (optional)\"\r\n                    name=\"description\"\r\n                    value={description}\r\n                    onChange={handleInputChange}\r\n                    />\r\n\r\n                    <label className={`\" ${(state.active)?'modal-input-colors' : 'modal-input-colors-none'} \"`}>Start Date:\r\n                    <input \r\n                        className={`\" mt-2 auth__input auth__input-text ${(state.active)?'modal-input-colors' : 'modal-input-colors-none'} \"`}\r\n                        type=\"date\" \r\n                        name=\"startDate\"\r\n                        value={startDate}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    </label>\r\n\r\n                    <label className={`\" ${(state.active)?'modal-input-colors' : 'modal-input-colors-none'} \"`}>Finish Date:\r\n                        <input \r\n                        className={`\" mt-2 auth__input auth__input-text ${(state.active)?'modal-input-colors' : 'modal-input-colors-none'} \"`}\r\n                        type=\"date\" \r\n                        name=\"endDate\"\r\n                        value={endDate}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                </label>\r\n                </form>\r\n\r\n                <div className=\"modal-container-image\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-3 image-focus\" onClick={()=>{handleImage('../img/fondo1.jpg')}} >\r\n                            <img src=\"../img/fondo1.jpg\" className=\"img-fluid image-table-responsive \" alt=\"...\"/>\r\n                         </div>\r\n\r\n                        <div className=\"col-3\" onClick={()=>{handleImage('../img/fondo2.jpeg')}}>\r\n                            <img src=\"../img/fondo2.jpeg\" className=\"img-fluid image-table-responsive\" alt=\"...\"/>\r\n                         </div>\r\n\r\n                        <div className=\"col-3\" onClick={()=>{handleImage('../img/fondo3.jpg')}}>\r\n                            <img src=\"../img/fondo3.jpg\" className=\"img-fluid image-table-responsive\" alt=\"...\"/>\r\n                        </div>\r\n\r\n                        <div className=\"col-3\" onClick={()=>{handleImage('../img/fondo4.jpg')}}>\r\n                            <img src=\"../img/fondo4.jpg\" className=\"img-fluid image-table-responsive\" alt=\"...\"/>\r\n                        </div>\r\n\r\n                        <div className=\"col-3\" onClick={()=>{handleImage('../img/fondo5.jpg')}}>\r\n                            <img src=\"../img/fondo5.jpg\" className=\"img-fluid image-table-responsive\" alt=\"...\"/>\r\n                        </div>\r\n\r\n                        <div className=\"col-3\" onClick={()=>{handleImage('../img/fondo6.jpg')}}>\r\n                            <img src=\"../img/fondo6.jpg\" className=\"img-fluid image-table-responsive\" alt=\"...\"/>\r\n                        </div>\r\n                     </div>\r\n                </div>\r\n               \r\n                \r\n        </div>\r\n      <div >\r\n          \r\n        <button type=\"button\" id=\"btnClose\" className=\"btn btn-secondary modal-btn-size\" onClick={handleModalClose} data-bs-dismiss=\"modal\">\r\n            <span><i className=\"fas fa-window-close\"></i></span>\r\n        </button> \r\n\r\n        <button type=\"button\" className=\"btn btn-info modal-btn-size\" onClick={handleAddProject}>\r\n            <span><i className=\"fas fa-save\"></i></span>\r\n        </button>\r\n         \r\n        \r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startCardTaskDelete, startCardTaskEdit, startChangeStatusCard } from '../../actions/project';\r\nimport { progress } from '../../helpers/progress';\r\nimport { useForm } from '../../hooks/useForm';\r\n\r\n\r\nexport const TaskCard = (task) => {\r\n    const {activeProject} = useSelector(state => state.project);\r\n    const dispatch = useDispatch();\r\n\r\n    const [formValues, handleInputChange] = useForm(task);\r\n\r\n    const [editable,setEditable] = useState(false);\r\n\r\n    const {taskTitle} = formValues; \r\n\r\n   \r\n    const handleMoveLeft = ()=>{\r\n        if(task.status==='Done'){\r\n\r\n            const newProject = {\r\n                ...activeProject,\r\n                task: activeProject.task.map(t => (t._id === task._id)?{...task,status:'Doing'}:t)\r\n            }\r\n           \r\n            const newTask = newProject.task.filter(t => (t._id === task._id));\r\n          \r\n           \r\n            const progressNow = progress(newProject);\r\n\r\n            dispatch(startChangeStatusCard(newProject,progressNow, newTask[0]));\r\n\r\n        }else if(task.status ==='Doing'){\r\n\r\n            const newProject = {\r\n                ...activeProject,\r\n                task: activeProject.task.map(t => (t._id === task._id)?{...task,status:'ToDo'}:t)\r\n            }\r\n           \r\n            const newTask = newProject.task.filter(t => (t._id === task._id));\r\n\r\n            dispatch(startChangeStatusCard(newProject,activeProject.progress, newTask[0] ));\r\n        }\r\n      \r\n   }\r\n\r\n\r\n   const handleMoveRight = ()=>{\r\n\r\n        if(task.status==='ToDo'){\r\n            const newProject = {\r\n                ...activeProject,\r\n                task: activeProject.task.map(t => (t._id === task._id)?{...task,status:'Doing'}:t)\r\n            }\r\n\r\n            const newTask = newProject.task.filter(t => (t._id === task._id));\r\n            dispatch(startChangeStatusCard(newProject, activeProject.progress, newTask[0]));\r\n\r\n        }else if(task.status ==='Doing'){\r\n            const newProject = {\r\n                ...activeProject,\r\n                task: activeProject.task.map(t => (t._id === task._id)?{...task,status:'Done'}:t)\r\n            }\r\n            \r\n            const progressNow = progress(newProject);\r\n            const newTask = newProject.task.filter(t => (t._id === task._id));\r\n            dispatch(startChangeStatusCard(newProject,progressNow,newTask[0]));\r\n        }\r\n    }\r\n\r\n\r\n    const handleEditTask = ()=>{\r\n        if(editable){\r\n            setEditable(false);\r\n        }else{\r\n            setEditable(true);\r\n        }\r\n       \r\n    }\r\n\r\n\r\n    const handleSaveEditTask = ()=>{\r\n        dispatch(startCardTaskEdit(activeProject.id, formValues));\r\n        setEditable(false);\r\n    }\r\n\r\n\r\n    const handleDeleteTask = ()=>{\r\n        const newProject = {\r\n            ...activeProject,\r\n            task: activeProject.task.filter(t=>(t._id !== task._id ))\r\n        }\r\n\r\n        const progressNow = progress(newProject);\r\n        \r\n        dispatch(startCardTaskDelete(task._id, progressNow));\r\n       \r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"card task-card-width task-card-height animate__animated animate__headShake task-card-background\" >\r\n            <div className=\"task-card-div\">\r\n           { !(task.status ==='ToDo') && (<button className=\"btn task-card-btn-width task-card-btn-move \" onClick={handleMoveLeft}>\r\n               <span className=\"fas fa-chevron-left task-card-icon-color\" >\r\n\r\n               </span>\r\n           </button>)}\r\n           {\r\n            !(task.status === 'Done') && (<button className=\"btn task-card-btn-width task-card-btn-move\" onClick={handleMoveRight}>\r\n                <span className=\"fas fa-chevron-right task-card-icon-color\" >\r\n\r\n                </span>\r\n                </button>)}\r\n            </div>\r\n        <div className=\"task-description\">\r\n        \r\n           {\r\n                (editable)\r\n                    ?(<textarea className=\"card-text task-text-area\" name=\"taskTitle\" onChange={handleInputChange} value={taskTitle} ></textarea>)\r\n                    :(<p className=\"card-text\">{task.taskTitle}</p>)\r\n            }\r\n          \r\n        </div>\r\n\r\n        \r\n\r\n        {\r\n                (editable)\r\n                    ?(<div>\r\n                         <button className=\"btn task-card-btn-width\" onClick={handleEditTask}><span className=\"fas fa-window-close task-card-icon-color\"></span></button>\r\n                        <button className=\"btn task-card-btn-width\" onClick={handleSaveEditTask}><span className=\"fas fa-save task-card-icon-color\"></span></button>\r\n                       \r\n                    </div>)\r\n                    :(<div>\r\n                        <button className=\"btn task-card-btn-width\" onClick={handleEditTask} data-bs-toggle=\"modal\" data-bs-target=\"#modalTask\"><span className=\"fas fa-edit task-card-icon-color\"></span></button>\r\n                        <button className=\"btn task-card-btn-width\" onClick={handleDeleteTask}><span className=\"fas fa-trash-alt task-card-icon-color\"></span></button>\r\n                    </div>)\r\n        }\r\n            \r\n        \r\n            \r\n       </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Redirect } from 'react-router';\r\nimport { startCardTaskCreate, startProjectDelete} from '../../actions/project';\r\nimport { progress } from '../../helpers/progress';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { Modal } from '../ui/Modal';\r\nimport { TaskCard } from './TaskCard';\r\n\r\n\r\n\r\nexport const ProjectManagerScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const {activeProject} = useSelector(state => state.project);\r\n    const {uid} = useSelector(state => state.auth);\r\n    const {loading} = useSelector(state => state.ui);\r\n    \r\n   \r\n    const [valid, setValid] = useState(true);\r\n   \r\n\r\n    const [formValues, handleInputChange, reset] = useForm({taskTitle:''});\r\n    const {taskTitle} = formValues;\r\n\r\n    \r\n    \r\n    useEffect(() => {\r\n        localStorage.setItem('activeProject',JSON.stringify(activeProject));\r\n        localStorage.setItem('busqueda',JSON.stringify(false));\r\n    }, []);\r\n\r\n    const handleDeleteProject = ()=>{\r\n        dispatch( startProjectDelete(activeProject.id, {user: uid}) )\r\n    }\r\n\r\n   \r\n    const handleAddNewTask = ()=>{\r\n       \r\n        if(isTaskValid()){\r\n           const task = {\r\n                taskTitle: taskTitle,\r\n                status: 'ToDo'\r\n            }\r\n\r\n            const newProject = {\r\n                ...activeProject,\r\n                task:[ ...activeProject.task,\r\n                        task\r\n                ]\r\n            }\r\n\r\n            const progressNow = progress(newProject);\r\n            \r\n\r\n           dispatch(startCardTaskCreate(activeProject.id, task, progressNow));\r\n           reset();\r\n          \r\n        }\r\n    } \r\n\r\n    const isTaskValid = ()=>{\r\n        if(taskTitle?.trim().length < 1){\r\n            setValid(false);\r\n            return false;\r\n        }\r\n        setValid(true);\r\n        return true;\r\n    }\r\n       \r\n\r\n    return (\r\n        <div className=\"background-project-manager\" style={{\r\n            backgroundImage: `url('${activeProject?.imgBackground}')`,\r\n            backgroundPosition: 'center',\r\n            height: '100vh',\r\n            width: '100vw'\r\n            }}>\r\n\r\n                {\r\n                    !activeProject && <Redirect to=\"/home/projects\"></Redirect>\r\n                }\r\n\r\n                <Modal />\r\n\r\n              \r\n\r\n            <div className=\"title-project\">\r\n                <h2>{activeProject?.projectName}</h2>\r\n                <div className=\"project-manager-div-button\">\r\n                    <div className=\"dropdown\">\r\n                        <button className=\" btn width-button-project \" type=\"button\" id=\"dropdownMenuButton1\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                        <span className=\"fas fa-cog project-manager-icon-button\"></span>\r\n                        </button>\r\n                        <ul className=\"dropdown-menu  drop-down-background\" aria-labelledby=\"dropdownMenuButton1\">\r\n                            <li><button className=\"btn \" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\"><span className=\"fas fa-edit project-manager-icon-button\"> Edit Project</span></button></li>\r\n                            <li> <button className=\"btn \" onClick={handleDeleteProject} ><span className=\"fas fa-trash-alt project-manager-icon-button\"> Delete</span></button></li>\r\n                        </ul>\r\n                    </div>\r\n                \r\n                \r\n                </div>\r\n               \r\n            </div>\r\n\r\n                <div className=\"progress progressbar-project\">\r\n                    <div className=\"progress-bar progresbar-project-color\" role=\"progressbar\" style={{width: `${activeProject?.progress}`}} aria-valuenow=\"0\" aria-valuemin=\"0\" aria-valuemax=\"100\">{activeProject?.progress}</div>\r\n                </div>\r\n            <div className=\"container\">\r\n\r\n            \r\n\r\n            <div className=\"row project-manager-max-2\"  >\r\n\r\n            \r\n               \r\n               <div className=\"col-xs-4 col-md-4 animate__animated animate__zoomIn project-manager-max\"> \r\n                <div className=\"card m-2 transparent project-manager-container-task\" >\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title title-white\">To do</h5>\r\n                        <h6 className=\"card-subtitle mb-2 title-white\">things to do</h6>\r\n\r\n                            <div className=\"card task-card-width task-card-height animate__animated animate__headShake new-task-card-background\" >\r\n                                 <div className=\"card-body \">\r\n                                    <textarea \r\n                                        className={`card-text task-text-area  ${!(valid)? ' animate__animated animate__headShake' : ''}`}\r\n                                        name=\"taskTitle\"\r\n                                        placeholder=\"add a new task...\"\r\n                                        value={taskTitle}\r\n                                        onChange={handleInputChange}\r\n                                    />\r\n                                     <div>\r\n                                        <button className=\"btn fas fa-plus-square title-white\" onClick={handleAddNewTask}></button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                    {\r\n                        activeProject?.task.map(task2=>{\r\n                            if(task2.status === 'ToDo')\r\n                            return <TaskCard key={task2._id} {...task2} />\r\n                        }\r\n                        )\r\n\r\n                    }\r\n                        \r\n                       \r\n                    </div>\r\n                   \r\n                </div>\r\n            </div>\r\n\r\n           \r\n\r\n            <div className=\"col-xs-4 col-md-4 animate__animated animate__zoomIn project-manager-max\"> \r\n                <div className=\"card m-2 transparent project-manager-container-task\" >\r\n                    <div className=\"card-body \" style={{position:\"relative\"}} >\r\n                    {(loading) && (<div><div className=\"spinner-border text-info profile-spiner\" role=\"status\">\r\n                                        <span className=\"visually-hidden\"></span>\r\n                                    </div>\r\n                                    </div>)\r\n                \r\n                                    }\r\n                        <h5 className=\"card-title title-white\">Doing\r\n                        </h5>\r\n\r\n                    {\r\n                        activeProject?.task.map(task2=>{\r\n                            if(task2.status === 'Doing')\r\n                            return <TaskCard key={task2._id} {...task2} />\r\n                        }\r\n                        )\r\n\r\n                    }\r\n                      \r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"col-xs-4 col-md-4 animate__animated animate__zoomIn project-manager-max\"> \r\n                <div className=\"card m-2 transparent project-manager-container-task\" >\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title title-white\">Done</h5>\r\n                       \r\n                    {   \r\n                        activeProject?.task.map(task2=>{\r\n                            if(task2.status === 'Done'){ \r\n                                \r\n                                return <TaskCard key={task2._id} {...task2} />\r\n                            \r\n                        }\r\n                        }\r\n                        )\r\n                    }\r\n                        \r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n        </div>\r\n            \r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setActiveProject } from '../../actions/project';\r\nimport { progress } from '../../helpers/progress';\r\n\r\nexport const Projects = (project) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const progressNow = progress(project);\r\n\r\n    const handleActiveProject = ()=>{\r\n\r\n        dispatch(setActiveProject(\r\n            {...project,\r\n                progress:progressNow\r\n        }));\r\n        \r\n    } \r\n    \r\n\r\n    return (\r\n        <>          \r\n\r\n            <div className=\"card  m-2 col-sm-12 col-md-3 cards-border card-project-cursor animate__animated animate__zoomIn\" \r\n            style={{\r\n                    backgroundImage: `url(${project.imgBackground})`,\r\n                    backgroundPosition: 'center',}} \r\n                onClick={handleActiveProject}\r\n            >\r\n                \r\n                    <div className=\"card-body card-body-margin \">\r\n                            <h5 className=\"card-title card-text-white project-title-width\">{project.projectName}</h5>\r\n                            <p className=\"card-text card-project-description card-text-white\" >{project.description}</p>\r\n\r\n                            <div className=\"progress progress-bar-background\">\r\n                            <div className=\"progress-bar  progress-bar-color\"  role=\"progressbar\"  aria-valuenow=\"0\" aria-valuemin=\"0\" aria-valuemax=\"100\"\r\n                            style={{\r\n                                width: progressNow\r\n                            }}\r\n                            > \r\n                            </div>\r\n                            </div>\r\n                            \r\n                    </div>\r\n            </div>\r\n                    \r\n            \r\n\r\n        </>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Redirect } from 'react-router';\r\nimport Swal from 'sweetalert2';\r\nimport { sendVerificationEmail } from '../../actions/auth';\r\nimport { setDesactivateProject, startLoadProjects } from '../../actions/project';\r\n\r\nimport { Modal } from '../ui/Modal';\r\nimport { Projects } from './Projects';\r\n\r\n\r\n\r\n\r\n\r\nexport const ProjectsScreen = () => {\r\n\r\n    const {userEmailVerified, uid} = useSelector(state => state.auth);\r\n    const {projects, activeProject} = useSelector(state => state.project);\r\n    const {loading} = useSelector(state => state.ui);\r\n\r\n    \r\n\r\n    const dispatch = useDispatch();\r\n    const handleResendEmailVerification =()=>{\r\n        dispatch(sendVerificationEmail());\r\n        Swal.fire('Success','success')\r\n   }\r\n\r\n   useEffect(() => {\r\n        dispatch(startLoadProjects(uid));\r\n        dispatch(setDesactivateProject());\r\n        localStorage.setItem('activeProject',JSON.stringify(null));\r\n        localStorage.setItem('busqueda',JSON.stringify(true));\r\n\r\n    }, [dispatch,uid])\r\n\r\n     \r\n    \r\n\r\n   \r\n\r\n    return (\r\n        <div className=\"projects-background\">\r\n            \r\n            <Modal />\r\n\r\n            {\r\n                !userEmailVerified\r\n                &&\r\n                <div className=\"alert alert-warning\" role=\"alert\">\r\n                Please reply to the verification email.\r\n                you did not receive it? <span className=\"resend-email\" onClick={handleResendEmailVerification}>Resend</span>\r\n                </div>\r\n            }\r\n\r\n\r\n            {\r\n                activeProject && <Redirect to=\"/home/manage\"></Redirect>\r\n            }\r\n\r\n            \r\n            \r\n\r\n            <div className=\"row cards-screen-center \">\r\n\r\n            { (loading) && (<div className=\"spinner-border text-info profile-spiner\" role=\"status\">\r\n                    <span className=\"visually-hidden\"></span>\r\n                </div>)\r\n                \r\n            }\r\n            <div className=\"card  m-2 col-sm-12 col-md-3 card-new-entry cards-border animate__animated animate__zoomIn\"  >\r\n                    <div className=\"card-body card-new-entry-center\">\r\n                       \r\n                           \r\n\r\n                            \r\n                            <button className=\"btn btn-info\" type=\"button\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\" >\r\n                            \r\n                                <i className=\"fas fa-folder-plus\">\r\n                                    <span className=\"projects-font\"> Create New Project</span>    \r\n                                </i>\r\n                                 \r\n                            </button>\r\n                    </div>\r\n            </div>\r\n\r\n\r\n                {\r\n                    projects?.map(project =>(\r\n                        <Projects key={project.id} {...project} />\r\n                    ))\r\n                        \r\n\r\n                }\r\n\r\n            \r\n                \r\n            </div>\r\n\r\n            {\r\n                (projects?.length === 0 && loading === false)?(<div style={{width:'100%', display:'flex', justifyContent:'flex-end'}}><div className=\"project-screen-alert alert alert-info alert-dismissible fade show\" role=\"alert\">\r\n                                                <strong> Hi!</strong> We have noticed that you do not have a project created yet, \r\n                                                click on the button to create a new project and start! <span><button type=\"button\" className=\"project-screen-btn-alert btn-close fas fa-window-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button></span>\r\n                \r\n                                                </div>\r\n                                            </div>)\r\n                    :('')\r\n            }\r\n\r\n        </div>  \r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { startlogOut } from '../../actions/auth';\r\nimport { loadProjects, startLoadProjects } from '../../actions/project';\r\nimport { useForm } from '../../hooks/useForm';\r\n\r\n\r\n\r\n\r\nexport const NavBar = () => {\r\n\r\n   const dispatch = useDispatch();\r\n   const {name, photoURL, uid} = useSelector(state => state.auth);\r\n   const {projects} = useSelector(state => state.project)\r\n\r\n    const [formValues, handleInputChange, reset] = useForm({search:''})\r\n    const {search} = formValues;\r\n    const handleLogout = ()=>{\r\n         dispatch(startlogOut());   \r\n        }\r\n    \r\n\r\n    const handleSearch = async()=>{\r\n        if(search === ''){\r\n        dispatch(startLoadProjects(uid))\r\n       }else{\r\n       \r\n        const searchLW = search.toLocaleLowerCase();\r\n        const projectFiltered = projects?.filter(p => p.projectName.toLocaleLowerCase().includes(searchLW));\r\n        \r\n\r\n           dispatch(loadProjects(projectFiltered));\r\n       } \r\n    }\r\n\r\n    const busqueda = localStorage.getItem('busqueda');\r\n\r\n    return (\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark navbar-background\">\r\n            <div className=\"container-fluid\">\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarTogglerDemo01\" aria-controls=\"navbarTogglerDemo01\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo01\">\r\n                \r\n                <img className=\"navbar-logo \" src=\"../Logo-white-transparent.PNG\" alt=\"Logo\" />\r\n               \r\n                <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n          \r\n          <Link className=\"nav-link active\" to=\"/home/projects\" aria-current=\"page\" >\r\n              \r\n          <i className=\"fas fa-home fa-2x\"></i>\r\n            </Link>\r\n        </li>\r\n        \r\n        \r\n\r\n      </ul>\r\n    </div>\r\n    <form className=\"d-flex  navbar-form\">\r\n                {(busqueda !== 'false')\r\n                ?(<><input className=\"form-control mt-2\" type=\"search\" name=\"search\" value={search} onChange={handleInputChange} placeholder=\"Search\" aria-label=\"Search\"/>\r\n                <button className=\"btn btn-outline-info ml-2\" onClick={handleSearch} type=\"button\">\r\n                    \r\n                    <i className=\"fas fa-search\"></i>\r\n                    \r\n                </button></>)\r\n                :('')\r\n                }\r\n                \r\n                <div className=\" dropdown nav-item\">\r\n                    <a className=\"dropdown-toggle nav-link navbar-user-name navbar-hover\" href=\"#\" type=\"button\" id=\"dropdownMenu2\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                       \r\n                       { (photoURL !== null)?(<><img src={photoURL} className=\"navbar-image-user\" /> {name}</>)\r\n                        :(<><span className=\"fas fa-user\"> </span> {name}</>)\r\n                        }\r\n\r\n                    </a>\r\n                    <ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenu2\">\r\n                        <li><Link to=\"/home/profile\" className=\"dropdown-item\" type=\"button\"><span className=\"fas fa-user\"> </span> Profile</Link></li>\r\n                        <li >\r\n                            <button className=\"dropdown-item fas fa-sign-out-alt \" type=\"button\"  onClick={handleLogout}><span className=\"navbar-font\"> Logout</span></button>\r\n                     \r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n        \r\n            </form>\r\n\r\n  </div>\r\n</nav>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router';\r\nimport { ProfileScreen } from '../components/project-manager/ProfileScreen';\r\nimport { ProjectManagerScreen } from '../components/project-manager/ProjectManagerScreen';\r\nimport { ProjectsScreen } from '../components/project-manager/ProjectsScreen';\r\nimport { NavBar } from '../components/ui/NavBar';\r\n\r\nexport const ProjectRouter = () => {\r\n    return (\r\n        <>\r\n            <NavBar />\r\n            <Switch>\r\n                <Route path=\"/home/projects\" component={ProjectsScreen} />\r\n                <Route path=\"/home/manage\" component={ProjectManagerScreen} />\r\n                <Route path=\"/home/profile\" component={ProfileScreen} />\r\n                <Redirect to=\"/home/projects\" />\r\n            </Switch>\r\n        </>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport {firebase} from '../firebase/firebase-config';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect\r\n  } from \"react-router-dom\";\r\n\r\n\r\nimport { AuthRouter } from './AuthRouter';\r\nimport { useDispatch } from 'react-redux';\r\nimport { login } from '../actions/auth';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\nimport { ProjectRouter } from './ProjectRouter';\r\nimport { setActiveProject } from '../actions/project';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const [check, setCheck] = useState(true);\r\n    const [isLoggedIn, setisLoggedIn] = useState(false);\r\n    \r\n\r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged(async( user )=>{\r\n            \r\n            if(user?.uid){\r\n            \r\n                dispatch(login(user.uid, user.displayName, user.emailVerified,user.email,user.photoURL));\r\n\r\n                setisLoggedIn(true);\r\n\r\n                if(localStorage.getItem('activeProject')!==null){\r\n                    const project = JSON.parse(localStorage.getItem('activeProject'))\r\n                   \r\n                    dispatch(setActiveProject(project));\r\n                }\r\n                \r\n            }\r\n            else{\r\n                setisLoggedIn(false);\r\n            }\r\n\r\n            setCheck(false);\r\n        });\r\n        \r\n    }, [dispatch, setCheck, setisLoggedIn]);\r\n\r\n    if(check){\r\n        return(\r\n            <div className=\"wait-screen\">\r\n                \r\n                <span><i className=\"fas fa-spinner fa-2x\"> </i> </span> \r\n                <span> <h2> checking please wait...</h2></span>\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n    \r\n    return (\r\n        <Router>\r\n           <Switch>\r\n               <PublicRoute isLogged={isLoggedIn}  path=\"/auth\" component={AuthRouter} />\r\n               \r\n               <PrivateRoute  isLogged={isLoggedIn}  path=\"/home\" component={ProjectRouter} />\r\n               \r\n\r\n               <Redirect to=\"/auth/landingPage\" />\r\n           </Switch>\r\n        </Router>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n/*{\r\n            id:'axaxax',\r\n            projectName: 'Sistema De Matriculas',\r\n            description: 'Sistema para facilitar la matricula de estudiantes.',\r\n            startDate: new Date().getTime(),\r\n            endDate: new Date().getTime(),\r\n            task:[{\r\n                id: 'zzzzzzz1',\r\n                taskTitle:'Terminar Proyecto',\r\n                status:'ToDo'\r\n                },\r\n                {\r\n                id: 'zzzzzzz2',\r\n                taskTitle:'Terminar Proyecto',\r\n                status:'Doing'\r\n                },\r\n    \r\n                {\r\n                id: 'zzzzzzz3',\r\n                taskTitle:'Terminar Proyecto',\r\n                status:'Doing'\r\n                }\r\n\r\n        ] ,\r\n        progress:'50%',\r\n        imgBackground:'../img/fondo1.jpg'\r\n        },\r\n\r\n        {\r\n        id:'axaxax2',\r\n        projectName: 'Sistema De Matriculas 2',\r\n        description: 'Sistema para facilitar la matricula de estudiantes.2 aaaa dhbhidhbahd hiabihbdjhana habisijndajsdnai',\r\n        startDate: new Date().getTime(),\r\n        endDate: new Date().getTime(),\r\n        task:[{\r\n            id: 'zzzzzzz7',\r\n            taskTitle:'Terminar Proyecto',\r\n            status:'ToDo'\r\n            },\r\n            {\r\n            id: 'zzzzzzz8',\r\n            taskTitle:'Terminar Proyecto',\r\n            status:'Done'\r\n            },\r\n\r\n            {\r\n            id: 'zzzzzzz9',\r\n            taskTitle:'Terminar Proyecto',\r\n            status:'Done'\r\n            }],\r\n        progress:'90%',\r\n        imgBackground:'../img/fondo2.jpeg'\r\n        },\r\n\r\n        {\r\n        id:'axaxax23',\r\n        projectName: 'Sistema De Matriculas 3',\r\n        description: 'hola mundo',\r\n        startDate: new Date().getTime(),\r\n        endDate: new Date().getTime(),\r\n        task:[],\r\n        progress:'25%',\r\n        imgBackground:'../img/fondo3.jpg'\r\n        \r\n        },\r\n\r\n        {\r\n        id:'axaxax224',\r\n        projectName: 'Sistema De Matriculas 4',\r\n        description: 'hola mundo',\r\n        startDate: new Date().getTime(),\r\n        endDate: new Date().getTime(),\r\n        task:[],\r\n        progress:'60%',\r\n        imgBackground:'../img/fondo4.jpg'\r\n        },\r\n\r\n        {\r\n        id:'axaxax234',\r\n        projectName: 'Sistema De Matriculas 5',\r\n        description: 'hola mundo',\r\n        startDate: new Date().getTime(),\r\n        endDate: new Date().getTime(),\r\n        task:[],\r\n        progress:'80%',\r\n        imgBackground:'../img/fondo5.jpg'\r\n        \r\n        },\r\n        {\r\n            id:'axaxax235',\r\n            projectName: 'Sistema De Matriculas 6',\r\n            description: 'hola mundo',\r\n            startDate: new Date().getTime(),\r\n            endDate: new Date().getTime(),\r\n            task:[],\r\n            progress:'80%',\r\n            imgBackground:'../img/fondo6.jpg'\r\n            \r\n            } */\r\n\r\nconst initialState ={\r\n     projects:[],\r\n    activeProject: null\r\n}\r\n\r\nexport const projectReducer = (state= initialState, action) => {\r\n        switch (action.type) {\r\n           case types.projectSetActive:\r\n               return{\r\n                   ...state,\r\n                   activeProject: action.payload\r\n               }\r\n            \r\n            case types.projectSetDesactivate:\r\n                return{\r\n                    ...state,\r\n                    activeProject: null\r\n                }\r\n            case types.projectCreate:\r\n                return{\r\n                    ...state,\r\n                    projects:[\r\n                        action.payload,\r\n                        ...state.projects\r\n                    ]\r\n                }\r\n\r\n                case types.projectUpdate:\r\n                    return{\r\n                        ...state,\r\n                        projects: state.projects.map(p=>(p.id === action.payload.id) ?action.payload :p),\r\n                        activeProject: action.payload \r\n                    }\r\n\r\n\r\n                case types.projectDelete:\r\n                    return{\r\n                        ...state,\r\n                        projects: state.projects.filter(p=>(p.id !== action.payload)),\r\n                        activeProject: null\r\n                    }\r\n            \r\n                case types.projectCreateTask:\r\n                    return{\r\n                        ...state,\r\n                        projects:\r\n                            state.projects.map(p=> (p.id === action.payload.idProject)\r\n                            ?({\r\n                                ...p,\r\n                                task:[ ...p.task, action.payload.task]\r\n                               \r\n                            })\r\n                            :(p)\r\n                            )\r\n                        ,\r\n                        activeProject:{\r\n                            ...state.activeProject,\r\n                            task:[ ...state.activeProject.task, action.payload.task],\r\n                            progress: action.payload.progress\r\n                        }\r\n                    }\r\n\r\n            case types.projectChangeCard:\r\n                return{\r\n                    ...state,\r\n                    projects: state.projects.map(p => (p.id === action.payload.project.id) \r\n                        ?{...p,\r\n                        task:action.payload.project.task\r\n                } \r\n                        : p),\r\n\r\n                    activeProject:{ ...action.payload.project,\r\n                        progress: action.payload.progress\r\n                    }\r\n                }\r\n\r\n\r\n                case types.projectEditTask:\r\n                   \r\n                    return{\r\n                        ...state,\r\n                        projects: state.projects.map(p => (p.id === action.payload.idProject) \r\n                            ?{...p,\r\n                                task: p.task.map(t=>(t._id === action.payload.task._id)\r\n                                ?(\r\n                                   action.payload.task\r\n                                )\r\n                                :(\r\n                                    t\r\n                                )\r\n                            )}\r\n\r\n                            : p),\r\n    \r\n                        activeProject: {\r\n                            ...state.activeProject,\r\n                            task: state.activeProject.task.map(t=>(t._id === action.payload.task._id)\r\n                                                                    ?(action.payload.task)\r\n                                                                    : t\r\n                            )\r\n                        }\r\n                    }\r\n    \r\n\r\n            case types.projectDeleteTask:\r\n                return {\r\n                    ...state,\r\n                    \r\n                    projects:state.projects.map(p => ({\r\n                        ...p,\r\n                        task: p.task.filter(t=>(t._id !== action.payload.idTask))\r\n                    }))\r\n                    \r\n                    ,\r\n                    \r\n                    activeProject:{ ...state.activeProject,\r\n                        task: state.activeProject.task.filter(ta=>(ta._id !== action.payload.idTask)),\r\n                        progress: action.payload.progress\r\n                    }\r\n                }\r\n            \r\n            case types.projectLoaded:\r\n                return{\r\n                    ...state,\r\n                    projects:[ ...action.payload ]\r\n                }\r\n            case types.projectLogOut:\r\n                return {}\r\n        \r\n            default:\r\n                return state;\r\n        }\r\n    \r\n}\r\n","import {createStore, combineReducers, applyMiddleware, compose} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { authReducer } from '../reducers/authReducer';\r\nimport { projectReducer } from '../reducers/projectReducer';\r\nimport { uiReducer } from '../reducers/uiReducer';\r\n\r\n\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    ui: uiReducer,\r\n    project: projectReducer\r\n    \r\n});\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n    );","import { types } from \"../types/types\";\r\n\r\n\r\n\r\nexport const authReducer = (state={}, action) =>{\r\n\r\n    switch (action.type) {\r\n        case types.login:\r\n            return{\r\n                uid: action.payload.uid,\r\n                email: action.payload.email,\r\n                name: action.payload.displayName,\r\n                userEmailVerified: action.payload.emailVerified,\r\n                photoURL: action.payload.photoURL\r\n                \r\n            }\r\n            \r\n        case types.logout:\r\n            return {}\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n}","import { types } from \"../types/types\";\r\n\r\nexport const uiReducer = (state={}, action)=>{\r\n    switch (action.type) {\r\n        case types.uiLoading:\r\n            return{\r\n                ...state,\r\n                loading: true\r\n            }\r\n        \r\n        case types.uiFinishLoading:\r\n            return{\r\n                ...state,\r\n                loading: false\r\n            }\r\n            \r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react'\r\nimport { Provider } from 'react-redux';\r\nimport { AppRouter } from './routers/AppRouter';\r\nimport { store } from './store/store';\r\nimport './styles/auth/auth.css';\r\nimport './styles/auth/landing.css';\r\nimport './styles/projectManager/logo.css';\r\nimport './styles/projectManager/projects-screen.css';\r\nimport './styles/ui/navbar.css';\r\nimport './styles/ui/modal.css';\r\nimport './styles/ui/tableImage.css';\r\nimport './styles/projectManager/project-manager-screen.css';\r\nimport './styles/projectManager/task-card.css';\r\nimport './styles/projectManager/profile.css';\r\n\r\nexport const ProjectApp = () => {\r\n    return (\r\n        <div>\r\n            <Provider store={store}>\r\n\r\n            <AppRouter />\r\n\r\n            </Provider>\r\n\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ProjectApp } from './ProjectApp';\n\n\n\nReactDOM.render(\n  <ProjectApp />,  \n  document.getElementById('root')\n);\n"],"sourceRoot":""}